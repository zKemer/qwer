const request = require('request');
const deasync = require('deasync');

class DarkCode {

	constructor(DCBL) {
		globalThis.botKey = DCBL;
	};

	checkVote(userId) {
		if (!userId) throw new Error("\n\n[DarkCode] Kontrol etmek istediğiniz kişinin ID'sini yazınız!\n");
		if (!globalThis.botKey) throw new Error("\n\n[DarkCode] Kontrol etmek için botunuzun anahtarını yazmalısınız!\n");

		return deasync(darkcodeReturn => {
			request({
				url: 'http://localhost/api/check/' + globalThis.botKey + '/gmCmr6ZhokMUlR4rrFzpdFuUtekQ3nLWE9XK6gm5P6goDubWDA',
				method: 'GET'
			}, function(error, response, body) {
				if (JSON.parse(body).response != true) {
					throw new Error("\n\n[DarkCode] Geçerli bir bot anahtarı girerek tekrar deneyin!\n");
					return;
				};
			});

			request({
				url: 'http://localhost/api/voted/' + globalThis.botKey + '/' + userId + '/gmCmr6ZhokMUlR4rrFzpdFuUtekQ3nLWE9XK6gm5P6goDubWDA',
				method: 'GET'
			}, function(error, response, body) {
				if (JSON.parse(body).response == true) {
					darkcodeReturn(null, true);
					return;
				} else {
					darkcodeReturn(null, null);
					return;
				};
			});
		})();
	};

	postStats(clientGuilds) {
		if (!clientGuilds) throw new Error("\n\n[DarkCode] İstatistikleri göndermek için client.guilds'i tanımlamalısınız!\n");
		if (!globalThis.botKey) throw new Error("\n\n[DarkCode] Kontrol etmek için botunuzun anahtarını yazmalısınız!\n");

		return deasync(darkcodeReturn => {
			request({
				url: 'http://localhost/api/check/' + globalThis.botKey + '/gmCmr6ZhokMUlR4rrFzpdFuUtekQ3nLWE9XK6gm5P6goDubWDA',
				method: 'GET'
			}, function(error, response, body) {
				if (JSON.parse(body).response != true) {
					throw new Error("\n\n[DarkCode] Geçerli bir bot anahtarı girerek tekrar deneyin!\n");
					return;
				};
			});

			try {
				const serverCount = clientGuilds.size ? clientGuilds.size : clientGuilds.cache.size;
				const userCount = clientGuilds.size ? clientGuilds.reduce((a, b) => a + b.memberCount, 0) : clientGuilds.cache.reduce((a, b) => a + b.memberCount, 0);

				request({
					url: 'http://localhost/api/stats/' + globalThis.botKey + '/' + serverCount + '/' + userCount + '/gmCmr6ZhokMUlR4rrFzpdFuUtekQ3nLWE9XK6gm5P6goDubWDA',
					method: 'GET'
				}, function(error, response, body) {
					darkcodeReturn(null, true);
					return;
				});
			} catch(err) {
				throw new Error("\n\n[DarkCode] Hata çıktı: " + err + "\n");
				return;
			}
		})();
	};

};

module.exports = DarkCode;
module.exports.version = require('./package.json').version;